// Clase principal de nuestro juego
class Main {
	function void main() {
		var int startRand, temp, temp2, mazeWidth, mazeHeight, xOrigin, yOrigin, bw, bh, padding;
        var PseudoRand rng;
        var Array maze, tempArr;
       	var Player player;
       	var PlayerController controller;
				// El ancho del laberinto indica el numero de bloques de derecha a izquierda
				// La altura del laberinto indica el n√∫mero de bloques de arriba a abajo

				// configuraciones
       	let mazeWidth = 16;
       	let mazeHeight = 10;
       	let xOrigin = 104;
       	let yOrigin = 8;
       	let bw = 24;
       	let bh = 24;
       	let padding = 6;

   
		do PlayHelper.drawPlayHelper();
		let startRand = Main.getFirstKeyPressed();
		let rng = PseudoRand.def(startRand); // La entrada del usuario es la semilla		
		do Screen.setColor(false);
		do Screen.drawRectangle(96, 0, 511, 255);

		let maze = Array.new(mazeHeight); // Arreglo de arreglos
		let temp = 0;
		while(temp < mazeHeight){
			let maze[temp] = Array.new(mazeWidth);
			let temp2 = 0;
			while(temp2 < mazeWidth){
				let tempArr = maze[temp];
				let tempArr[temp2] = 0;
				let temp2 = temp2 + 1;
			}
			let temp = temp + 1;
		}


		do MazeGenerator.generate(maze, rng, mazeWidth, mazeHeight);
		do MazeDrawer.drawMaze(maze, xOrigin, yOrigin, bw, bh, mazeWidth, mazeHeight);

		let player = Player.new(0, 0); //starting point is top left

		let controller = PlayerController.new(player, maze, xOrigin, yOrigin,
		 bw, bh, mazeWidth, mazeHeight, padding);

		do Main.drawEndPoint(xOrigin, yOrigin, bw, bh, mazeWidth, mazeHeight, 8);
		

		do controller.loop();

		do Screen.setColor(false);
		do Screen.drawRectangle(0, 0, 511, 255);

		do Screen.setColor(true);
		do Output.moveCursor(11, 28);
		do Output.printString("GANASTE!");



		return;
	}

	function void drawEndPoint(int baseX, int baseY, int bw, int bh, int xc, int yc, int rad){
		do Screen.setColor(true);
		do Screen.drawCircle(baseX + ((xc - 1) * bw) + (bw / 2),
			baseY + (bh / 2), rad);
		return;
	}

	function int getFirstKeyPressed(){
		var char key;
		let key = 0;
		while(key = 0){
			let key = Keyboard.keyPressed();
		}
		return key;
	}

}
